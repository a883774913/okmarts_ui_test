{
  "uid" : "782fb083faa555bc",
  "name" : "输入空的用户名登录失败",
  "fullName" : "test_main.Test_Main#test_login",
  "historyId" : "7b24053d778ca78cc1b753c6805043b6",
  "time" : {
    "start" : 1651036200238,
    "stop" : 1651036222700,
    "duration" : 22462
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=100.0.4896.127)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00927413+2389011]\n\tOrdinal0 [0x008B9F61+1941345]\n\tOrdinal0 [0x007AC658+837208]\n\tOrdinal0 [0x007DA64A+1025610]\n\tOrdinal0 [0x007CFF93+982931]\n\tOrdinal0 [0x007F414C+1130828]\n\tOrdinal0 [0x007CF974+981364]\n\tOrdinal0 [0x007F4364+1131364]\n\tOrdinal0 [0x00804302+1196802]\n\tOrdinal0 [0x007F3F66+1130342]\n\tOrdinal0 [0x007CE546+976198]\n\tOrdinal0 [0x007CF456+980054]\n\tGetHandleVerifier [0x00AD9632+1727522]\n\tGetHandleVerifier [0x00B8BA4D+2457661]\n\tGetHandleVerifier [0x009BEB81+569713]\n\tGetHandleVerifier [0x009BDD76+566118]\n\tOrdinal0 [0x008C0B2B+1968939]\n\tOrdinal0 [0x008C5988+1989000]\n\tOrdinal0 [0x008C5A75+1989237]\n\tOrdinal0 [0x008CECB1+2026673]\n\tBaseThreadInitThunk [0x75906739+25]\n\tRtlGetFullPathName_UEx [0x77408E7F+1215]\n\tRtlGetFullPathName_UEx [0x77408E4D+1165]",
  "statusTrace" : "self = <test_main.Test_Main object at 0x000001D955723FA0>\nParameter = {'assert_way': 'class name=login-form-forgot', 'case_no': '2', 'casename': '输入空的用户名登录失败', 'data': 'userAccount=\\npassword=a123456', ...}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b93df9bf9fed55af28b9b9fc5d059e9f\")>\n\n    @allure.feature('登录')\n    @pytest.mark.parametrize('Parameter', case_infos['login'], ids=casename_infos['login'])\n    def test_login(self, Parameter, driver):\n        allure.dynamic.title(Parameter['casename'])  # 测试用例名称\n>       Login().login(Parameter, driver)\n\ntest_main.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\mode\\login.py:22: in login\n    Common().Restore_environment(dr)\n..\\common\\common.py:64: in Restore_environment\n    dr.find_element(by='class name', value='ant-btn.ant-btn-primary.ant-btn-sm').click()  # 点击确认\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:81: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:710: in _execute\n    return self._parent.execute(command, params)\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001D9556F2C70>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: element ha...unk [0x75906739+25]\\\\n\\\\tRtlGetFullPathName_UEx [0x77408E7F+1215]\\\\n\\\\tRtlGetFullPathName_UEx [0x77408E4D+1165]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\nE         (Session info: chrome=100.0.4896.127)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00927413+2389011]\nE       \tOrdinal0 [0x008B9F61+1941345]\nE       \tOrdinal0 [0x007AC658+837208]\nE       \tOrdinal0 [0x007DA64A+1025610]\nE       \tOrdinal0 [0x007CFF93+982931]\nE       \tOrdinal0 [0x007F414C+1130828]\nE       \tOrdinal0 [0x007CF974+981364]\nE       \tOrdinal0 [0x007F4364+1131364]\nE       \tOrdinal0 [0x00804302+1196802]\nE       \tOrdinal0 [0x007F3F66+1130342]\nE       \tOrdinal0 [0x007CE546+976198]\nE       \tOrdinal0 [0x007CF456+980054]\nE       \tGetHandleVerifier [0x00AD9632+1727522]\nE       \tGetHandleVerifier [0x00B8BA4D+2457661]\nE       \tGetHandleVerifier [0x009BEB81+569713]\nE       \tGetHandleVerifier [0x009BDD76+566118]\nE       \tOrdinal0 [0x008C0B2B+1968939]\nE       \tOrdinal0 [0x008C5988+1989000]\nE       \tOrdinal0 [0x008C5A75+1989237]\nE       \tOrdinal0 [0x008CECB1+2026673]\nE       \tBaseThreadInitThunk [0x75906739+25]\nE       \tRtlGetFullPathName_UEx [0x77408E7F+1215]\nE       \tRtlGetFullPathName_UEx [0x77408E4D+1165]\n\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: ElementNotInteractableException",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1651036160659,
      "stop" : 1651036162863,
      "duration" : 2204
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1651036162864,
      "stop" : 1651036162864,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=100.0.4896.127)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00927413+2389011]\n\tOrdinal0 [0x008B9F61+1941345]\n\tOrdinal0 [0x007AC658+837208]\n\tOrdinal0 [0x007DA64A+1025610]\n\tOrdinal0 [0x007CFF93+982931]\n\tOrdinal0 [0x007F414C+1130828]\n\tOrdinal0 [0x007CF974+981364]\n\tOrdinal0 [0x007F4364+1131364]\n\tOrdinal0 [0x00804302+1196802]\n\tOrdinal0 [0x007F3F66+1130342]\n\tOrdinal0 [0x007CE546+976198]\n\tOrdinal0 [0x007CF456+980054]\n\tGetHandleVerifier [0x00AD9632+1727522]\n\tGetHandleVerifier [0x00B8BA4D+2457661]\n\tGetHandleVerifier [0x009BEB81+569713]\n\tGetHandleVerifier [0x009BDD76+566118]\n\tOrdinal0 [0x008C0B2B+1968939]\n\tOrdinal0 [0x008C5988+1989000]\n\tOrdinal0 [0x008C5A75+1989237]\n\tOrdinal0 [0x008CECB1+2026673]\n\tBaseThreadInitThunk [0x75906739+25]\n\tRtlGetFullPathName_UEx [0x77408E7F+1215]\n\tRtlGetFullPathName_UEx [0x77408E4D+1165]",
    "statusTrace" : "self = <test_main.Test_Main object at 0x000001D955723FA0>\nParameter = {'assert_way': 'class name=login-form-forgot', 'case_no': '2', 'casename': '输入空的用户名登录失败', 'data': 'userAccount=\\npassword=a123456', ...}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b93df9bf9fed55af28b9b9fc5d059e9f\")>\n\n    @allure.feature('登录')\n    @pytest.mark.parametrize('Parameter', case_infos['login'], ids=casename_infos['login'])\n    def test_login(self, Parameter, driver):\n        allure.dynamic.title(Parameter['casename'])  # 测试用例名称\n>       Login().login(Parameter, driver)\n\ntest_main.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\mode\\login.py:22: in login\n    Common().Restore_environment(dr)\n..\\common\\common.py:64: in Restore_environment\n    dr.find_element(by='class name', value='ant-btn.ant-btn-primary.ant-btn-sm').click()  # 点击确认\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:81: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:710: in _execute\n    return self._parent.execute(command, params)\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001D9556F2C70>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: element ha...unk [0x75906739+25]\\\\n\\\\tRtlGetFullPathName_UEx [0x77408E7F+1215]\\\\n\\\\tRtlGetFullPathName_UEx [0x77408E4D+1165]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\nE         (Session info: chrome=100.0.4896.127)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00927413+2389011]\nE       \tOrdinal0 [0x008B9F61+1941345]\nE       \tOrdinal0 [0x007AC658+837208]\nE       \tOrdinal0 [0x007DA64A+1025610]\nE       \tOrdinal0 [0x007CFF93+982931]\nE       \tOrdinal0 [0x007F414C+1130828]\nE       \tOrdinal0 [0x007CF974+981364]\nE       \tOrdinal0 [0x007F4364+1131364]\nE       \tOrdinal0 [0x00804302+1196802]\nE       \tOrdinal0 [0x007F3F66+1130342]\nE       \tOrdinal0 [0x007CE546+976198]\nE       \tOrdinal0 [0x007CF456+980054]\nE       \tGetHandleVerifier [0x00AD9632+1727522]\nE       \tGetHandleVerifier [0x00B8BA4D+2457661]\nE       \tGetHandleVerifier [0x009BEB81+569713]\nE       \tGetHandleVerifier [0x009BDD76+566118]\nE       \tOrdinal0 [0x008C0B2B+1968939]\nE       \tOrdinal0 [0x008C5988+1989000]\nE       \tOrdinal0 [0x008C5A75+1989237]\nE       \tOrdinal0 [0x008CECB1+2026673]\nE       \tBaseThreadInitThunk [0x75906739+25]\nE       \tRtlGetFullPathName_UEx [0x77408E7F+1215]\nE       \tRtlGetFullPathName_UEx [0x77408E4D+1165]\n\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: ElementNotInteractableException",
    "steps" : [ {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1651036222950,
        "stop" : 1651036223371,
        "duration" : 421
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "c943d58bdbf3949c",
        "name" : "失败截图",
        "source" : "c943d58bdbf3949c.png",
        "type" : "image/png",
        "size" : 147896
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "2f789257fc36b125",
      "name" : "stdout",
      "source" : "2f789257fc36b125.txt",
      "type" : "text/plain",
      "size" : 278
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1651038260064,
      "stop" : 1651038260561,
      "duration" : 497
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "driver::0",
    "time" : {
      "start" : 1651038260561,
      "stop" : 1651038260561,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "登录"
  }, {
    "name" : "suite",
    "value" : "test_main"
  }, {
    "name" : "subSuite",
    "value" : "Test_Main"
  }, {
    "name" : "host",
    "value" : "DESKTOP-NB3FDE0"
  }, {
    "name" : "thread",
    "value" : "21748-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_main"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "Parameter",
    "value" : "{'case_no': '2', 'casename': '输入空的用户名登录失败', 'mode': '登录', 'data': 'userAccount=\\npassword=a123456', 'assert_way': 'class name=login-form-forgot', 'result': '\\n              Forgot Password?\\n            '}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 31,
        "unknown" : 0,
        "total" : 33
      },
      "items" : [ {
        "uid" : "1be9be332d287eae",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/45/allure/#testresult/1be9be332d287eae",
        "status" : "passed",
        "time" : {
          "start" : 1651032417242,
          "stop" : 1651032424423,
          "duration" : 7181
        }
      }, {
        "uid" : "10bba9851a767cc0",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/43/allure/#testresult/10bba9851a767cc0",
        "status" : "passed",
        "time" : {
          "start" : 1651021183733,
          "stop" : 1651021191003,
          "duration" : 7270
        }
      }, {
        "uid" : "5a02ea027f459ab9",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/42/allure/#testresult/5a02ea027f459ab9",
        "status" : "passed",
        "time" : {
          "start" : 1650959566432,
          "stop" : 1650959573634,
          "duration" : 7202
        }
      }, {
        "uid" : "2154155085a43282",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/41/allure/#testresult/2154155085a43282",
        "status" : "passed",
        "time" : {
          "start" : 1650956182283,
          "stop" : 1650956189977,
          "duration" : 7694
        }
      }, {
        "uid" : "c22c9cfe46874013",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/40/allure/#testresult/c22c9cfe46874013",
        "status" : "passed",
        "time" : {
          "start" : 1650950429128,
          "stop" : 1650950435995,
          "duration" : 6867
        }
      }, {
        "uid" : "3d8a02591985f893",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/39/allure/#testresult/3d8a02591985f893",
        "status" : "passed",
        "time" : {
          "start" : 1650934649353,
          "stop" : 1650934656170,
          "duration" : 6817
        }
      }, {
        "uid" : "a1c97192e41a2e1e",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/38/allure/#testresult/a1c97192e41a2e1e",
        "status" : "passed",
        "time" : {
          "start" : 1650867982217,
          "stop" : 1650867989476,
          "duration" : 7259
        }
      }, {
        "uid" : "488d022a1083e511",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/37/allure/#testresult/488d022a1083e511",
        "status" : "passed",
        "time" : {
          "start" : 1650865508947,
          "stop" : 1650865515847,
          "duration" : 6900
        }
      }, {
        "uid" : "775d093b2716e5e8",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/36/allure/#testresult/775d093b2716e5e8",
        "status" : "passed",
        "time" : {
          "start" : 1650857247203,
          "stop" : 1650857254607,
          "duration" : 7404
        }
      }, {
        "uid" : "9341e19dd8b4d77f",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/34/allure/#testresult/9341e19dd8b4d77f",
        "status" : "passed",
        "time" : {
          "start" : 1650853508746,
          "stop" : 1650853515530,
          "duration" : 6784
        }
      }, {
        "uid" : "a49fd868a5ea9f67",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/33/allure/#testresult/a49fd868a5ea9f67",
        "status" : "passed",
        "time" : {
          "start" : 1650851558996,
          "stop" : 1650851565966,
          "duration" : 6970
        }
      }, {
        "uid" : "21df9531bc3bf3f7",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/32/allure/#testresult/21df9531bc3bf3f7",
        "status" : "passed",
        "time" : {
          "start" : 1650788503194,
          "stop" : 1650788529565,
          "duration" : 26371
        }
      }, {
        "uid" : "d9485def108448cc",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/31/allure/#testresult/d9485def108448cc",
        "status" : "passed",
        "time" : {
          "start" : 1650784838356,
          "stop" : 1650784845108,
          "duration" : 6752
        }
      }, {
        "uid" : "76bbc2e0a6222741",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/30/allure/#testresult/76bbc2e0a6222741",
        "status" : "passed",
        "time" : {
          "start" : 1650603620070,
          "stop" : 1650603626721,
          "duration" : 6651
        }
      }, {
        "uid" : "36613e7cd3235978",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/29/allure/#testresult/36613e7cd3235978",
        "status" : "passed",
        "time" : {
          "start" : 1650598571928,
          "stop" : 1650598578619,
          "duration" : 6691
        }
      }, {
        "uid" : "9099c778520eab0b",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/28/allure/#testresult/9099c778520eab0b",
        "status" : "passed",
        "time" : {
          "start" : 1650597282675,
          "stop" : 1650597289337,
          "duration" : 6662
        }
      }, {
        "uid" : "919872c5a17f475f",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/27/allure/#testresult/919872c5a17f475f",
        "status" : "passed",
        "time" : {
          "start" : 1650596300519,
          "stop" : 1650596307233,
          "duration" : 6714
        }
      }, {
        "uid" : "e28ff1f09fb93dfa",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/24/allure/#testresult/e28ff1f09fb93dfa",
        "status" : "passed",
        "time" : {
          "start" : 1650519871128,
          "stop" : 1650519877941,
          "duration" : 6813
        }
      }, {
        "uid" : "c0ba76231b5c923c",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/23/allure/#testresult/c0ba76231b5c923c",
        "status" : "passed",
        "time" : {
          "start" : 1650518958963,
          "stop" : 1650518965819,
          "duration" : 6856
        }
      }, {
        "uid" : "dd97f545e1367bbb",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/22/allure/#testresult/dd97f545e1367bbb",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"horizontal_login_userAccount\"]\"}\n  (Session info: chrome=100.0.4896.127)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x007F7413+2389011]\n\tOrdinal0 [0x00789F61+1941345]\n\tOrdinal0 [0x0067C658+837208]\n\tOrdinal0 [0x006A91DD+1020381]\n\tOrdinal0 [0x006A949B+1021083]\n\tOrdinal0 [0x006D6032+1204274]\n\tOrdinal0 [0x006C4194+1130900]\n\tOrdinal0 [0x006D4302+1196802]\n\tOrdinal0 [0x006C3F66+1130342]\n\tOrdinal0 [0x0069E546+976198]\n\tOrdinal0 [0x0069F456+980054]\n\tGetHandleVerifier [0x009A9632+1727522]\n\tGetHandleVerifier [0x00A5BA4D+2457661]\n\tGetHandleVerifier [0x0088EB81+569713]\n\tGetHandleVerifier [0x0088DD76+566118]\n\tOrdinal0 [0x00790B2B+1968939]\n\tOrdinal0 [0x00795988+1989000]\n\tOrdinal0 [0x00795A75+1989237]\n\tOrdinal0 [0x0079ECB1+2026673]\n\tBaseThreadInitThunk [0x75906739+25]\n\tRtlGetFullPathName_UEx [0x77408E7F+1215]\n\tRtlGetFullPathName_UEx [0x77408E4D+1165]",
        "time" : {
          "start" : 1650517521589,
          "stop" : 1650517525842,
          "duration" : 4253
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "782fb083faa555bc.json",
  "parameterValues" : [ "{'case_no': '2', 'casename': '输入空的用户名登录失败', 'mode': '登录', 'data': 'userAccount=\\npassword=a123456', 'assert_way': 'class name=login-form-forgot', 'result': '\\n              Forgot Password?\\n            '}" ]
}