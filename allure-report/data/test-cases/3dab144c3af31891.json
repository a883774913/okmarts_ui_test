{
  "uid" : "3dab144c3af31891",
  "name" : "点击order data可以根据订单时间进行排序",
  "fullName" : "test_main.Test_Main#test_my_order",
  "historyId" : "1c56705930638359f5ef42176bace7d5",
  "time" : {
    "start" : 1651053093908,
    "stop" : 1651053100539,
    "duration" : 6631
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <okmarts_ui_test.mode.my_order.My_Order object at 0x000002027543FF10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7653383af2e9f0424914e917ee12141e\")>\ninfo = '2393'\n\n    def assert_time_desc(self,driver,info):\n        \"\"\"\n        断言时间排序方法\n        :param driver: 驱动\n        :param info:  获取的定位文本\n        :return:\n        \"\"\"\n        if info == '2035':  # 为日期降序\n            time_1 = driver.find_elements(by='class name', value='item.width-17.date')[0].text\n            print(time_1)\n            number1 = self.get_number(time_1)\n            print(number1)\n            time_2 = driver.find_elements(by='class name', value='item.width-17.date')[1].text\n            print(time_2)\n            number2 = self.get_number(time_2)\n            print(number2)\n            try:\n                assert number1 > number2\n                print('降序测试通过')\n            except AssertionError:\n                print('降序测试失败')\n                raise  AssertionError\n        elif info == '2393':  # 日期升序\n            time_1 = driver.find_elements(by='class name', value='item.width-17.date')[0].text\n            print(time_1)\n            number1 = self.get_number(time_1)\n            print(number1)\n            time_2 = driver.find_elements(by='class name', value='item.width-17.date')[1].text\n            print(time_2)\n            number2 = self.get_number(time_2)\n            print(number2)\n            try:\n>               assert number1 < number2\nE               AssertionError\n\n..\\mode\\my_order.py:189: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_main.Test_Main object at 0x000002027493D340>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7653383af2e9f0424914e917ee12141e\")>\nParameter = {'assert_way': '', 'case_no': '98', 'casename': '点击order data可以根据订单时间进行排序', 'data': '', ...}\n\n    @allure.feature('订单管理')\n    @pytest.mark.parametrize('Parameter', case_infos['my_order'], ids=casename_infos['my_order'])\n    def test_my_order(self, driver, Parameter):\n        allure.dynamic.title(Parameter['casename'])\n>       My_Order().my_order(driver,Parameter)\n\ntest_main.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\mode\\my_order.py:105: in my_order\n    self.assert_time_desc(driver, info3)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <okmarts_ui_test.mode.my_order.My_Order object at 0x000002027543FF10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7653383af2e9f0424914e917ee12141e\")>\ninfo = '2393'\n\n    def assert_time_desc(self,driver,info):\n        \"\"\"\n        断言时间排序方法\n        :param driver: 驱动\n        :param info:  获取的定位文本\n        :return:\n        \"\"\"\n        if info == '2035':  # 为日期降序\n            time_1 = driver.find_elements(by='class name', value='item.width-17.date')[0].text\n            print(time_1)\n            number1 = self.get_number(time_1)\n            print(number1)\n            time_2 = driver.find_elements(by='class name', value='item.width-17.date')[1].text\n            print(time_2)\n            number2 = self.get_number(time_2)\n            print(number2)\n            try:\n                assert number1 > number2\n                print('降序测试通过')\n            except AssertionError:\n                print('降序测试失败')\n                raise  AssertionError\n        elif info == '2393':  # 日期升序\n            time_1 = driver.find_elements(by='class name', value='item.width-17.date')[0].text\n            print(time_1)\n            number1 = self.get_number(time_1)\n            print(number1)\n            time_2 = driver.find_elements(by='class name', value='item.width-17.date')[1].text\n            print(time_2)\n            number2 = self.get_number(time_2)\n            print(number2)\n            try:\n                assert number1 < number2\n                print('升序测试通过')\n            except AssertionError:\n                print('升序测试失败')\n>               raise AssertionError\nE               AssertionError\n\n..\\mode\\my_order.py:193: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1651050932526,
      "stop" : 1651050934692,
      "duration" : 2166
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1651050934693,
      "stop" : 1651050934693,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <okmarts_ui_test.mode.my_order.My_Order object at 0x000002027543FF10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7653383af2e9f0424914e917ee12141e\")>\ninfo = '2393'\n\n    def assert_time_desc(self,driver,info):\n        \"\"\"\n        断言时间排序方法\n        :param driver: 驱动\n        :param info:  获取的定位文本\n        :return:\n        \"\"\"\n        if info == '2035':  # 为日期降序\n            time_1 = driver.find_elements(by='class name', value='item.width-17.date')[0].text\n            print(time_1)\n            number1 = self.get_number(time_1)\n            print(number1)\n            time_2 = driver.find_elements(by='class name', value='item.width-17.date')[1].text\n            print(time_2)\n            number2 = self.get_number(time_2)\n            print(number2)\n            try:\n                assert number1 > number2\n                print('降序测试通过')\n            except AssertionError:\n                print('降序测试失败')\n                raise  AssertionError\n        elif info == '2393':  # 日期升序\n            time_1 = driver.find_elements(by='class name', value='item.width-17.date')[0].text\n            print(time_1)\n            number1 = self.get_number(time_1)\n            print(number1)\n            time_2 = driver.find_elements(by='class name', value='item.width-17.date')[1].text\n            print(time_2)\n            number2 = self.get_number(time_2)\n            print(number2)\n            try:\n>               assert number1 < number2\nE               AssertionError\n\n..\\mode\\my_order.py:189: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_main.Test_Main object at 0x000002027493D340>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7653383af2e9f0424914e917ee12141e\")>\nParameter = {'assert_way': '', 'case_no': '98', 'casename': '点击order data可以根据订单时间进行排序', 'data': '', ...}\n\n    @allure.feature('订单管理')\n    @pytest.mark.parametrize('Parameter', case_infos['my_order'], ids=casename_infos['my_order'])\n    def test_my_order(self, driver, Parameter):\n        allure.dynamic.title(Parameter['casename'])\n>       My_Order().my_order(driver,Parameter)\n\ntest_main.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\mode\\my_order.py:105: in my_order\n    self.assert_time_desc(driver, info3)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <okmarts_ui_test.mode.my_order.My_Order object at 0x000002027543FF10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7653383af2e9f0424914e917ee12141e\")>\ninfo = '2393'\n\n    def assert_time_desc(self,driver,info):\n        \"\"\"\n        断言时间排序方法\n        :param driver: 驱动\n        :param info:  获取的定位文本\n        :return:\n        \"\"\"\n        if info == '2035':  # 为日期降序\n            time_1 = driver.find_elements(by='class name', value='item.width-17.date')[0].text\n            print(time_1)\n            number1 = self.get_number(time_1)\n            print(number1)\n            time_2 = driver.find_elements(by='class name', value='item.width-17.date')[1].text\n            print(time_2)\n            number2 = self.get_number(time_2)\n            print(number2)\n            try:\n                assert number1 > number2\n                print('降序测试通过')\n            except AssertionError:\n                print('降序测试失败')\n                raise  AssertionError\n        elif info == '2393':  # 日期升序\n            time_1 = driver.find_elements(by='class name', value='item.width-17.date')[0].text\n            print(time_1)\n            number1 = self.get_number(time_1)\n            print(number1)\n            time_2 = driver.find_elements(by='class name', value='item.width-17.date')[1].text\n            print(time_2)\n            number2 = self.get_number(time_2)\n            print(number2)\n            try:\n                assert number1 < number2\n                print('升序测试通过')\n            except AssertionError:\n                print('升序测试失败')\n>               raise AssertionError\nE               AssertionError\n\n..\\mode\\my_order.py:193: AssertionError",
    "steps" : [ {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1651053100568,
        "stop" : 1651053100743,
        "duration" : 175
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "da9c2c66e9bc84da",
        "name" : "失败截图",
        "source" : "da9c2c66e9bc84da.png",
        "type" : "image/png",
        "size" : 116785
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "e9dea5192e5d1503",
      "name" : "stdout",
      "source" : "e9dea5192e5d1503.txt",
      "type" : "text/plain",
      "size" : 213
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1651053107382,
      "stop" : 1651053107900,
      "duration" : 518
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "driver::0",
    "time" : {
      "start" : 1651053107903,
      "stop" : 1651053107903,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "订单管理"
  }, {
    "name" : "suite",
    "value" : "test_main"
  }, {
    "name" : "subSuite",
    "value" : "Test_Main"
  }, {
    "name" : "host",
    "value" : "DESKTOP-NB3FDE0"
  }, {
    "name" : "thread",
    "value" : "11876-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_main"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "Parameter",
    "value" : "{'case_no': '98', 'casename': '点击order data可以根据订单时间进行排序', 'mode': '订单管理', 'data': '', 'assert_way': '', 'result': ''}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "3dab144c3af31891.json",
  "parameterValues" : [ "{'case_no': '98', 'casename': '点击order data可以根据订单时间进行排序', 'mode': '订单管理', 'data': '', 'assert_way': '', 'result': ''}" ]
}