{
  "uid" : "814a949a82a06c66",
  "name" : "密码为纯小写字母注册失败",
  "fullName" : "test_main.Test_Main#test_regist",
  "historyId" : "7dee1056e92b6ff49e92c8950ff9ab31",
  "time" : {
    "start" : 1650604006629,
    "stop" : 1650604035326,
    "duration" : 28697
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <okmarts_ui_test.mode.register.Regist object at 0x00000209759573D0>\nParameter = {'assert_way': 'xpath=/html/body/div[3]/div/div/div/div[2]/div/div/div', 'case_no': '21', 'casename': '密码为纯小写字母注册失败', 'data': 'useraccount=a883774917@163.com\\npassword=asdfghjkl', ...}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"12728d93affcf8ca8c3791638c02857f\")>\n\n    def regist(self, Parameter, driver):\n        casename = Parameter['casename']\n        mode = Parameter['mode']\n        data = Parameter['data'].split('\\n')\n        if casename == '用户名邮箱为空下一步操作置灰':\n            useraccount = data[0].split('=')[-1]\n        elif casename == '输入已存在的用户名注册失败':\n            useraccount = '979172251@qq.com'\n        else:\n            useraccount = Common().random_email_account()\n    \n        assert_way = Parameter['assert_way']\n        result = Parameter['result']\n        driver.get('http://18.118.13.94:81/my/register')\n        time.sleep(0.5)\n        driver.find_element(by='id', value='register_step_1_userAccount').send_keys(useraccount)\n    \n        if casename == '不勾选用户协议注册失败':\n            driver.find_element(by='class name', value='ant-checkbox').click()\n        else:\n            pass\n    \n        driver.find_element(by='xpath',\n                            value='//*[@id=\"app\"]/div/div[1]/div[2]/form/div[3]/div/div/span/div/button/a').click()  # 点击下一步发送验证码\n    \n        if casename == '用户名邮箱为空下一步操作置灰':\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").get_attribute('disabled')\n            print('通道1')\n            print(text)\n            assert text == result\n        elif casename == '关闭验证码页面成功':\n            time.sleep(3)\n            # print(self.dr.find_element(by='class name', value='ant-modal-body').is_displayed())\n            driver.find_element(by='class name', value='anticon.anticon-close.ant-modal-close-icon').click()\n            time.sleep(0.5)\n            assert driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").is_displayed() is not result\n        elif casename == '使用过期验证码验证失败':\n            code = Get_Code().wangyi(username=useraccount, password='Qwe3541118', name='hydraulic', no=2)  # 获取验证码\n            print(code[0])\n            self.input_code(driver, code)\n            time.sleep(1.3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道2')\n            print(text)\n            assert text == result\n        elif casename == '输入错误验证码注册失败':\n            time.sleep(2)\n            self.input_code(driver, ['111111'])\n            time.sleep(1.3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道3')\n            print(text)\n            assert text == result\n        elif casename == '超时后再次发送验证码成功':\n            time.sleep(63)\n            driver.find_element(by='xpath', value='/html/body/div[2]/div/div[2]/div/div[2]/div/div/div[2]/a').click()\n            time.sleep(3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道4')\n            print(text)\n            assert text == result\n        elif casename in ['邮箱不含@弹出错误提示', '输入已存在的用户名注册失败', '不勾选用户协议注册失败']:\n            time.sleep(1)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道5')\n            print(text)\n            assert text == result\n        elif casename == '注册完成后领取优惠卷成功':\n            self.regist_mode1(useraccount, driver, data)\n            driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div[1]/div[5]/img').click()  # 点击礼物箱\n            time.sleep(0.2)\n            driver.find_element(by='class name', value='bg-orange.ant-btn').click()  # 点击确定\n            time.sleep(2)\n            text = driver.find_element(by='xpath', value='/html/body/div[2]/span/div/div/div/span').text\n            print(text)\n            driver.find_element(by='id', value='horizontal_login_userAccount').send_keys(useraccount)  # 登录\n            driver.find_element(by='id', value='horizontal_login_password').send_keys(data[1].split('=')[-1])\n            driver.find_element(by='class name', value='atn-btn-orange.ant-btn.ant-btn-lg.ant-btn-block').click()\n            time.sleep(2)\n            driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div[1]/div/div[2]/div[3]/div[1]/span/p').click()\n            time.sleep(1.5)\n            coupons_text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                               value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道6')\n            print(coupons_text)\n            assert text == 'success' and coupons_text == result\n        else:\n            try:\n>               self.regist_mode1(useraccount, driver, data)\n\n..\\mode\\register.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <okmarts_ui_test.mode.register.Regist object at 0x00000209759573D0>\nuseraccount = 'a883774920@163.com'\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"12728d93affcf8ca8c3791638c02857f\")>\ndata = ['useraccount=a883774917@163.com', 'password=asdfghjkl']\n\n    def regist_mode1(self, useraccount, driver, data):\n        time.sleep(10)\n        code = Get_Code().wangyi(username=useraccount, password='Qwe3541118', name='hydraulic', no=1)  # 获取验证码\n        print(code[0])\n>       self.input_code(driver, code)\n\n..\\mode\\register.py:141: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <okmarts_ui_test.mode.register.Regist object at 0x00000209759573D0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"12728d93affcf8ca8c3791638c02857f\")>\ncode = ['7591', '10']\n\n    def input_code(self, driver, code):\n        driver.find_element(by='css selector', value='div[class=\"input-content\"]>input[data-index=\"0\"]').send_keys(\n            code[0][0])  # 验证码第1个\n        driver.find_element(by='css selector', value='div[class=\"input-content\"]>input[data-index=\"1\"]').send_keys(\n            code[0][1])  # 验证码第2个\n        driver.find_element(by='css selector', value='div[class=\"input-content\"]>input[data-index=\"2\"]').send_keys(\n            code[0][2])  # 验证码第3个\n        driver.find_element(by='css selector', value='div[class=\"input-content\"]>input[data-index=\"3\"]').send_keys(\n            code[0][3])  # 验证码第4个\n        driver.find_element(by='css selector', value='div[class=\"input-content\"]>input[data-index=\"4\"]').send_keys(\n>           code[0][4])  # 验证码第5个\nE       IndexError: string index out of range\n\n..\\mode\\register.py:132: IndexError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_main.Test_Main object at 0x0000020975511550>\nParameter = {'assert_way': 'xpath=/html/body/div[3]/div/div/div/div[2]/div/div/div', 'case_no': '21', 'casename': '密码为纯小写字母注册失败', 'data': 'useraccount=a883774917@163.com\\npassword=asdfghjkl', ...}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"12728d93affcf8ca8c3791638c02857f\")>\n\n    @allure.feature('注册')\n    @pytest.mark.parametrize('Parameter',case_infos['registe'],ids=casename_infos['registe'])\n    def test_regist(self,Parameter,driver):\n        allure.dynamic.title(Parameter['casename'])  # 测试用例名称\n>       Regist().regist(Parameter,driver)\n\ntest_main.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <okmarts_ui_test.mode.register.Regist object at 0x00000209759573D0>\nParameter = {'assert_way': 'xpath=/html/body/div[3]/div/div/div/div[2]/div/div/div', 'case_no': '21', 'casename': '密码为纯小写字母注册失败', 'data': 'useraccount=a883774917@163.com\\npassword=asdfghjkl', ...}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"12728d93affcf8ca8c3791638c02857f\")>\n\n    def regist(self, Parameter, driver):\n        casename = Parameter['casename']\n        mode = Parameter['mode']\n        data = Parameter['data'].split('\\n')\n        if casename == '用户名邮箱为空下一步操作置灰':\n            useraccount = data[0].split('=')[-1]\n        elif casename == '输入已存在的用户名注册失败':\n            useraccount = '979172251@qq.com'\n        else:\n            useraccount = Common().random_email_account()\n    \n        assert_way = Parameter['assert_way']\n        result = Parameter['result']\n        driver.get('http://18.118.13.94:81/my/register')\n        time.sleep(0.5)\n        driver.find_element(by='id', value='register_step_1_userAccount').send_keys(useraccount)\n    \n        if casename == '不勾选用户协议注册失败':\n            driver.find_element(by='class name', value='ant-checkbox').click()\n        else:\n            pass\n    \n        driver.find_element(by='xpath',\n                            value='//*[@id=\"app\"]/div/div[1]/div[2]/form/div[3]/div/div/span/div/button/a').click()  # 点击下一步发送验证码\n    \n        if casename == '用户名邮箱为空下一步操作置灰':\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").get_attribute('disabled')\n            print('通道1')\n            print(text)\n            assert text == result\n        elif casename == '关闭验证码页面成功':\n            time.sleep(3)\n            # print(self.dr.find_element(by='class name', value='ant-modal-body').is_displayed())\n            driver.find_element(by='class name', value='anticon.anticon-close.ant-modal-close-icon').click()\n            time.sleep(0.5)\n            assert driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").is_displayed() is not result\n        elif casename == '使用过期验证码验证失败':\n            code = Get_Code().wangyi(username=useraccount, password='Qwe3541118', name='hydraulic', no=2)  # 获取验证码\n            print(code[0])\n            self.input_code(driver, code)\n            time.sleep(1.3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道2')\n            print(text)\n            assert text == result\n        elif casename == '输入错误验证码注册失败':\n            time.sleep(2)\n            self.input_code(driver, ['111111'])\n            time.sleep(1.3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道3')\n            print(text)\n            assert text == result\n        elif casename == '超时后再次发送验证码成功':\n            time.sleep(63)\n            driver.find_element(by='xpath', value='/html/body/div[2]/div/div[2]/div/div[2]/div/div/div[2]/a').click()\n            time.sleep(3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道4')\n            print(text)\n            assert text == result\n        elif casename in ['邮箱不含@弹出错误提示', '输入已存在的用户名注册失败', '不勾选用户协议注册失败']:\n            time.sleep(1)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道5')\n            print(text)\n            assert text == result\n        elif casename == '注册完成后领取优惠卷成功':\n            self.regist_mode1(useraccount, driver, data)\n            driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div[1]/div[5]/img').click()  # 点击礼物箱\n            time.sleep(0.2)\n            driver.find_element(by='class name', value='bg-orange.ant-btn').click()  # 点击确定\n            time.sleep(2)\n            text = driver.find_element(by='xpath', value='/html/body/div[2]/span/div/div/div/span').text\n            print(text)\n            driver.find_element(by='id', value='horizontal_login_userAccount').send_keys(useraccount)  # 登录\n            driver.find_element(by='id', value='horizontal_login_password').send_keys(data[1].split('=')[-1])\n            driver.find_element(by='class name', value='atn-btn-orange.ant-btn.ant-btn-lg.ant-btn-block').click()\n            time.sleep(2)\n            driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div[1]/div/div[2]/div[3]/div[1]/span/p').click()\n            time.sleep(1.5)\n            coupons_text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                               value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道6')\n            print(coupons_text)\n            assert text == 'success' and coupons_text == result\n        else:\n            try:\n                self.regist_mode1(useraccount, driver, data)\n                text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                           value=f\"{assert_way.split('=', 1)[1]}\").text\n                print('通道0')\n                print(text)\n                assert text == result\n            except :\n>               raise AssertionError\nE               AssertionError\n\n..\\mode\\register.py:120: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1650603609838,
      "stop" : 1650603611810,
      "duration" : 1972
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1650603611811,
      "stop" : 1650603611811,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <okmarts_ui_test.mode.register.Regist object at 0x00000209759573D0>\nParameter = {'assert_way': 'xpath=/html/body/div[3]/div/div/div/div[2]/div/div/div', 'case_no': '21', 'casename': '密码为纯小写字母注册失败', 'data': 'useraccount=a883774917@163.com\\npassword=asdfghjkl', ...}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"12728d93affcf8ca8c3791638c02857f\")>\n\n    def regist(self, Parameter, driver):\n        casename = Parameter['casename']\n        mode = Parameter['mode']\n        data = Parameter['data'].split('\\n')\n        if casename == '用户名邮箱为空下一步操作置灰':\n            useraccount = data[0].split('=')[-1]\n        elif casename == '输入已存在的用户名注册失败':\n            useraccount = '979172251@qq.com'\n        else:\n            useraccount = Common().random_email_account()\n    \n        assert_way = Parameter['assert_way']\n        result = Parameter['result']\n        driver.get('http://18.118.13.94:81/my/register')\n        time.sleep(0.5)\n        driver.find_element(by='id', value='register_step_1_userAccount').send_keys(useraccount)\n    \n        if casename == '不勾选用户协议注册失败':\n            driver.find_element(by='class name', value='ant-checkbox').click()\n        else:\n            pass\n    \n        driver.find_element(by='xpath',\n                            value='//*[@id=\"app\"]/div/div[1]/div[2]/form/div[3]/div/div/span/div/button/a').click()  # 点击下一步发送验证码\n    \n        if casename == '用户名邮箱为空下一步操作置灰':\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").get_attribute('disabled')\n            print('通道1')\n            print(text)\n            assert text == result\n        elif casename == '关闭验证码页面成功':\n            time.sleep(3)\n            # print(self.dr.find_element(by='class name', value='ant-modal-body').is_displayed())\n            driver.find_element(by='class name', value='anticon.anticon-close.ant-modal-close-icon').click()\n            time.sleep(0.5)\n            assert driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").is_displayed() is not result\n        elif casename == '使用过期验证码验证失败':\n            code = Get_Code().wangyi(username=useraccount, password='Qwe3541118', name='hydraulic', no=2)  # 获取验证码\n            print(code[0])\n            self.input_code(driver, code)\n            time.sleep(1.3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道2')\n            print(text)\n            assert text == result\n        elif casename == '输入错误验证码注册失败':\n            time.sleep(2)\n            self.input_code(driver, ['111111'])\n            time.sleep(1.3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道3')\n            print(text)\n            assert text == result\n        elif casename == '超时后再次发送验证码成功':\n            time.sleep(63)\n            driver.find_element(by='xpath', value='/html/body/div[2]/div/div[2]/div/div[2]/div/div/div[2]/a').click()\n            time.sleep(3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道4')\n            print(text)\n            assert text == result\n        elif casename in ['邮箱不含@弹出错误提示', '输入已存在的用户名注册失败', '不勾选用户协议注册失败']:\n            time.sleep(1)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道5')\n            print(text)\n            assert text == result\n        elif casename == '注册完成后领取优惠卷成功':\n            self.regist_mode1(useraccount, driver, data)\n            driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div[1]/div[5]/img').click()  # 点击礼物箱\n            time.sleep(0.2)\n            driver.find_element(by='class name', value='bg-orange.ant-btn').click()  # 点击确定\n            time.sleep(2)\n            text = driver.find_element(by='xpath', value='/html/body/div[2]/span/div/div/div/span').text\n            print(text)\n            driver.find_element(by='id', value='horizontal_login_userAccount').send_keys(useraccount)  # 登录\n            driver.find_element(by='id', value='horizontal_login_password').send_keys(data[1].split('=')[-1])\n            driver.find_element(by='class name', value='atn-btn-orange.ant-btn.ant-btn-lg.ant-btn-block').click()\n            time.sleep(2)\n            driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div[1]/div/div[2]/div[3]/div[1]/span/p').click()\n            time.sleep(1.5)\n            coupons_text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                               value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道6')\n            print(coupons_text)\n            assert text == 'success' and coupons_text == result\n        else:\n            try:\n>               self.regist_mode1(useraccount, driver, data)\n\n..\\mode\\register.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <okmarts_ui_test.mode.register.Regist object at 0x00000209759573D0>\nuseraccount = 'a883774920@163.com'\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"12728d93affcf8ca8c3791638c02857f\")>\ndata = ['useraccount=a883774917@163.com', 'password=asdfghjkl']\n\n    def regist_mode1(self, useraccount, driver, data):\n        time.sleep(10)\n        code = Get_Code().wangyi(username=useraccount, password='Qwe3541118', name='hydraulic', no=1)  # 获取验证码\n        print(code[0])\n>       self.input_code(driver, code)\n\n..\\mode\\register.py:141: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <okmarts_ui_test.mode.register.Regist object at 0x00000209759573D0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"12728d93affcf8ca8c3791638c02857f\")>\ncode = ['7591', '10']\n\n    def input_code(self, driver, code):\n        driver.find_element(by='css selector', value='div[class=\"input-content\"]>input[data-index=\"0\"]').send_keys(\n            code[0][0])  # 验证码第1个\n        driver.find_element(by='css selector', value='div[class=\"input-content\"]>input[data-index=\"1\"]').send_keys(\n            code[0][1])  # 验证码第2个\n        driver.find_element(by='css selector', value='div[class=\"input-content\"]>input[data-index=\"2\"]').send_keys(\n            code[0][2])  # 验证码第3个\n        driver.find_element(by='css selector', value='div[class=\"input-content\"]>input[data-index=\"3\"]').send_keys(\n            code[0][3])  # 验证码第4个\n        driver.find_element(by='css selector', value='div[class=\"input-content\"]>input[data-index=\"4\"]').send_keys(\n>           code[0][4])  # 验证码第5个\nE       IndexError: string index out of range\n\n..\\mode\\register.py:132: IndexError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_main.Test_Main object at 0x0000020975511550>\nParameter = {'assert_way': 'xpath=/html/body/div[3]/div/div/div/div[2]/div/div/div', 'case_no': '21', 'casename': '密码为纯小写字母注册失败', 'data': 'useraccount=a883774917@163.com\\npassword=asdfghjkl', ...}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"12728d93affcf8ca8c3791638c02857f\")>\n\n    @allure.feature('注册')\n    @pytest.mark.parametrize('Parameter',case_infos['registe'],ids=casename_infos['registe'])\n    def test_regist(self,Parameter,driver):\n        allure.dynamic.title(Parameter['casename'])  # 测试用例名称\n>       Regist().regist(Parameter,driver)\n\ntest_main.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <okmarts_ui_test.mode.register.Regist object at 0x00000209759573D0>\nParameter = {'assert_way': 'xpath=/html/body/div[3]/div/div/div/div[2]/div/div/div', 'case_no': '21', 'casename': '密码为纯小写字母注册失败', 'data': 'useraccount=a883774917@163.com\\npassword=asdfghjkl', ...}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"12728d93affcf8ca8c3791638c02857f\")>\n\n    def regist(self, Parameter, driver):\n        casename = Parameter['casename']\n        mode = Parameter['mode']\n        data = Parameter['data'].split('\\n')\n        if casename == '用户名邮箱为空下一步操作置灰':\n            useraccount = data[0].split('=')[-1]\n        elif casename == '输入已存在的用户名注册失败':\n            useraccount = '979172251@qq.com'\n        else:\n            useraccount = Common().random_email_account()\n    \n        assert_way = Parameter['assert_way']\n        result = Parameter['result']\n        driver.get('http://18.118.13.94:81/my/register')\n        time.sleep(0.5)\n        driver.find_element(by='id', value='register_step_1_userAccount').send_keys(useraccount)\n    \n        if casename == '不勾选用户协议注册失败':\n            driver.find_element(by='class name', value='ant-checkbox').click()\n        else:\n            pass\n    \n        driver.find_element(by='xpath',\n                            value='//*[@id=\"app\"]/div/div[1]/div[2]/form/div[3]/div/div/span/div/button/a').click()  # 点击下一步发送验证码\n    \n        if casename == '用户名邮箱为空下一步操作置灰':\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").get_attribute('disabled')\n            print('通道1')\n            print(text)\n            assert text == result\n        elif casename == '关闭验证码页面成功':\n            time.sleep(3)\n            # print(self.dr.find_element(by='class name', value='ant-modal-body').is_displayed())\n            driver.find_element(by='class name', value='anticon.anticon-close.ant-modal-close-icon').click()\n            time.sleep(0.5)\n            assert driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").is_displayed() is not result\n        elif casename == '使用过期验证码验证失败':\n            code = Get_Code().wangyi(username=useraccount, password='Qwe3541118', name='hydraulic', no=2)  # 获取验证码\n            print(code[0])\n            self.input_code(driver, code)\n            time.sleep(1.3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道2')\n            print(text)\n            assert text == result\n        elif casename == '输入错误验证码注册失败':\n            time.sleep(2)\n            self.input_code(driver, ['111111'])\n            time.sleep(1.3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道3')\n            print(text)\n            assert text == result\n        elif casename == '超时后再次发送验证码成功':\n            time.sleep(63)\n            driver.find_element(by='xpath', value='/html/body/div[2]/div/div[2]/div/div[2]/div/div/div[2]/a').click()\n            time.sleep(3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道4')\n            print(text)\n            assert text == result\n        elif casename in ['邮箱不含@弹出错误提示', '输入已存在的用户名注册失败', '不勾选用户协议注册失败']:\n            time.sleep(1)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道5')\n            print(text)\n            assert text == result\n        elif casename == '注册完成后领取优惠卷成功':\n            self.regist_mode1(useraccount, driver, data)\n            driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div[1]/div[5]/img').click()  # 点击礼物箱\n            time.sleep(0.2)\n            driver.find_element(by='class name', value='bg-orange.ant-btn').click()  # 点击确定\n            time.sleep(2)\n            text = driver.find_element(by='xpath', value='/html/body/div[2]/span/div/div/div/span').text\n            print(text)\n            driver.find_element(by='id', value='horizontal_login_userAccount').send_keys(useraccount)  # 登录\n            driver.find_element(by='id', value='horizontal_login_password').send_keys(data[1].split('=')[-1])\n            driver.find_element(by='class name', value='atn-btn-orange.ant-btn.ant-btn-lg.ant-btn-block').click()\n            time.sleep(2)\n            driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div[1]/div/div[2]/div[3]/div[1]/span/p').click()\n            time.sleep(1.5)\n            coupons_text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                               value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道6')\n            print(coupons_text)\n            assert text == 'success' and coupons_text == result\n        else:\n            try:\n                self.regist_mode1(useraccount, driver, data)\n                text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                           value=f\"{assert_way.split('=', 1)[1]}\").text\n                print('通道0')\n                print(text)\n                assert text == result\n            except :\n>               raise AssertionError\nE               AssertionError\n\n..\\mode\\register.py:120: AssertionError",
    "steps" : [ {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1650604035350,
        "stop" : 1650604035474,
        "duration" : 124
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "99198e0478b1bba6",
        "name" : "失败截图",
        "source" : "99198e0478b1bba6.png",
        "type" : "image/png",
        "size" : 48129
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "e32d78a038b428c1",
      "name" : "stdout",
      "source" : "e32d78a038b428c1.txt",
      "type" : "text/plain",
      "size" : 24
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1650604536330,
      "stop" : 1650604536330,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "driver::0",
    "time" : {
      "start" : 1650604536331,
      "stop" : 1650604536629,
      "duration" : 298
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "注册"
  }, {
    "name" : "suite",
    "value" : "test_main"
  }, {
    "name" : "subSuite",
    "value" : "Test_Main"
  }, {
    "name" : "host",
    "value" : "DESKTOP-NB3FDE0"
  }, {
    "name" : "thread",
    "value" : "9384-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_main"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "Parameter",
    "value" : "{'case_no': '21', 'casename': '密码为纯小写字母注册失败', 'mode': '注册', 'data': 'useraccount=a883774917@163.com\\npassword=asdfghjkl', 'assert_way': 'xpath=/html/body/div[3]/div/div/div/div[2]/div/div/div', 'result': 'Please set the password to a combination of 6 to 16 digits and letters'}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 5,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "ce82ffd398d17b55",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/29/allure/#testresult/ce82ffd398d17b55",
        "status" : "passed",
        "time" : {
          "start" : 1650598960256,
          "stop" : 1650599003988,
          "duration" : 43732
        }
      }, {
        "uid" : "493950f2e7c15907",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/28/allure/#testresult/493950f2e7c15907",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div[class=\"input-content\"]>input[data-index=\"0\"]\"}\n  (Session info: chrome=100.0.4896.127)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00E27413+2389011]\n\tOrdinal0 [0x00DB9F61+1941345]\n\tOrdinal0 [0x00CAC658+837208]\n\tOrdinal0 [0x00CD91DD+1020381]\n\tOrdinal0 [0x00CD949B+1021083]\n\tOrdinal0 [0x00D06032+1204274]\n\tOrdinal0 [0x00CF4194+1130900]\n\tOrdinal0 [0x00D04302+1196802]\n\tOrdinal0 [0x00CF3F66+1130342]\n\tOrdinal0 [0x00CCE546+976198]\n\tOrdinal0 [0x00CCF456+980054]\n\tGetHandleVerifier [0x00FD9632+1727522]\n\tGetHandleVerifier [0x0108BA4D+2457661]\n\tGetHandleVerifier [0x00EBEB81+569713]\n\tGetHandleVerifier [0x00EBDD76+566118]\n\tOrdinal0 [0x00DC0B2B+1968939]\n\tOrdinal0 [0x00DC5988+1989000]\n\tOrdinal0 [0x00DC5A75+1989237]\n\tOrdinal0 [0x00DCECB1+2026673]\n\tBaseThreadInitThunk [0x75906739+25]\n\tRtlGetFullPathName_UEx [0x77408E7F+1215]\n\tRtlGetFullPathName_UEx [0x77408E4D+1165]",
        "time" : {
          "start" : 1650597597690,
          "stop" : 1650597626309,
          "duration" : 28619
        }
      }, {
        "uid" : "7b61414407d867c9",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/27/allure/#testresult/7b61414407d867c9",
        "status" : "passed",
        "time" : {
          "start" : 1650596664795,
          "stop" : 1650596707519,
          "duration" : 42724
        }
      }, {
        "uid" : "80b72db5b31eb988",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/24/allure/#testresult/80b72db5b31eb988",
        "status" : "passed",
        "time" : {
          "start" : 1650520242166,
          "stop" : 1650520287136,
          "duration" : 44970
        }
      }, {
        "uid" : "c93a7b5c10115dae",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/23/allure/#testresult/c93a7b5c10115dae",
        "status" : "passed",
        "time" : {
          "start" : 1650519323047,
          "stop" : 1650519366663,
          "duration" : 43616
        }
      }, {
        "uid" : "b546320e7573a13",
        "reportUrl" : "http://localhost:8080/job/okmarts_ui_test/22/allure/#testresult/b546320e7573a13",
        "status" : "passed",
        "time" : {
          "start" : 1650517887402,
          "stop" : 1650517929499,
          "duration" : 42097
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "814a949a82a06c66.json",
  "parameterValues" : [ "{'case_no': '21', 'casename': '密码为纯小写字母注册失败', 'mode': '注册', 'data': 'useraccount=a883774917@163.com\\npassword=asdfghjkl', 'assert_way': 'xpath=/html/body/div[3]/div/div/div/div[2]/div/div/div', 'result': 'Please set the password to a combination of 6 to 16 digits and letters'}" ]
}