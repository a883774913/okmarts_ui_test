{"name": "密码为数字+大写字母+特殊字符注册成功", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <okmarts_ui_test.mode.register.Regist object at 0x000001D9557EE790>\nParameter = {'assert_way': 'class name=text-tit-lg', 'case_no': '29', 'casename': '密码为数字+大写字母+特殊字符注册成功', 'data': 'useraccount=a883774917@163.com\\npassword=123ASD！@#', ...}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b93df9bf9fed55af28b9b9fc5d059e9f\")>\n\n    def regist(self, Parameter, driver):\n        casename = Parameter['casename']\n        mode = Parameter['mode']\n        data = Parameter['data'].split('\\n')\n        if casename == '用户名邮箱为空下一步操作置灰':\n            useraccount = data[0].split('=')[-1]\n        elif casename == '输入已存在的用户名注册失败':\n            useraccount = '979172251@qq.com'\n        else:\n            useraccount = Common().random_email_account()\n    \n        assert_way = Parameter['assert_way']\n        result = Parameter['result']\n        driver.get('http://18.118.13.94:81/my/register')\n        time.sleep(0.5)\n        driver.find_element(by='id', value='register_step_1_userAccount').send_keys(useraccount)\n    \n        if casename == '不勾选用户协议注册失败':\n            driver.find_element(by='class name', value='ant-checkbox').click()\n        else:\n            pass\n    \n        driver.find_element(by='xpath',\n                            value='//*[@id=\"app\"]/div/div[1]/div[2]/form/div[3]/div/div/span/div/button/a').click()  # 点击下一步发送验证码\n    \n        if casename == '用户名邮箱为空下一步操作置灰':\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").get_attribute('disabled')\n            print('通道1')\n            print(text)\n            assert text == result\n        elif casename == '关闭验证码页面成功':\n            time.sleep(3)\n            # print(self.dr.find_element(by='class name', value='ant-modal-body').is_displayed())\n            driver.find_element(by='class name', value='anticon.anticon-close.ant-modal-close-icon').click()\n            time.sleep(0.5)\n            assert driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").is_displayed() is not result\n        elif casename == '使用过期验证码验证失败':\n            code = Get_Code().wangyi(username=useraccount, password='Qwe3541118', name='hydraulic', no=2)  # 获取验证码\n            self.input_code(driver, code)\n            time.sleep(2)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道2')\n            print(text)\n            assert text == result\n        elif casename == '输入错误验证码注册失败':\n            self.input_code(driver, ['111111'])\n            time.sleep(2)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道3')\n            print(text)\n            assert text == result\n        elif casename == '超时后再次发送验证码成功':\n            time.sleep(63)\n            driver.find_element(by='xpath', value='/html/body/div[2]/div/div[2]/div/div[2]/div/div/div[2]/a').click()\n            time.sleep(3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道4')\n            print(text)\n            assert text == result\n        elif casename in ['邮箱不含@弹出错误提示', '输入已存在的用户名注册失败', '不勾选用户协议注册失败']:\n            time.sleep(1)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道5')\n            print(text)\n            assert text == result\n        elif casename == '注册完成后领取优惠卷成功':\n            self.regist_mode1(useraccount, driver, data)\n            driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div[1]/div[5]/img').click()  # 点击礼物箱\n            time.sleep(0.2)\n            driver.find_element(by='class name', value='bg-orange.ant-btn').click()  # 点击确定\n            time.sleep(2)\n            text = driver.find_element(by='xpath', value='/html/body/div[2]/span/div/div/div/span').text\n            print(text)\n            Common().login(driver,useraccount,password=data[1].split('=')[-1])\n            WebDriverWait(driver,30,0.2).until(lambda x:x.find_element_by_css_selector('#app > div > div.global-header > div > div.menu-content > div.menu-right.flex > div:nth-child(1) > span'))\n            driver.find_element(by='css selector', value='#app > div > div.global-header > div > div.menu-content > div.menu-right.flex > div:nth-child(1) > span').click()\n            time.sleep(1.5)\n            coupons_text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                               value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道6')\n            print(coupons_text)\n            assert text == 'success' and coupons_text == result\n        elif casename == '领取优惠卷回退页面再次领取失败':\n            self.regist_mode1(useraccount, driver, data)\n            driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div[1]/div[5]/img').click()  # 点击礼物箱\n            time.sleep(0.2)\n            driver.find_element(by='class name', value='bg-orange.ant-btn').click()  # 点击确定\n            time.sleep(2)\n            driver.back()\n            time.sleep(2)\n            driver.find_element(by='class name', value='bg-orange.ant-btn').click()  # 点击确定\n            time.sleep(2)\n            Common().login(driver,useraccount,password=data[1].split('=')[-1])   #登录\n            driver.find_element(by='css selector', value='#app > div > div.global-header > div > div.menu-content > div.menu-right.flex > div:nth-child(1) > span > p').click()\n            time.sleep(1.5)\n            coupons_text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                               value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道7')\n            print(coupons_text)\n            assert coupons_text == result\n        elif casename == '不进行验证注册失败':\n            print('通道0')\n            time.sleep(10)      #等待验证码发送至邮箱\n            code = Get_Code().wangyi(username=useraccount, password='Qwe3541118', name='hydraulic', no=1)  # 获取验证码\n            print(code[0])\n            self.input_code(driver, code)\n            time.sleep(2)\n            driver.find_element(by='css selector',value='#app > div > div.login-form-wrap > '\n                                                        'div.login-form.margin-bottom > form > div:nth-child(1) > div'\n                                                        ' > div > span > span > input').send_keys(data[1].split('=')[-1]) # 输入密码\n    \n            time.sleep(0.5)\n            driver.find_element(by=\"css selector\",\n                                value='#app > div > div.login-form-wrap > div.login-form.margin-bottom > form > '\n                                      'div.btn-out.ant-row.ant-form-item > div > div > span > div > a').click()  # 点击下一步\n            WebDriverWait(driver,30,0.2).until(lambda driver:driver.find_element(by='css selector',value='body > div.ant-message > span > div > div > div > span'))\n            time.sleep(2)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print(f'text 为{text}')\n            print(f'result 为{result}')\n            assert text == result\n        else:\n            try:\n                self.regist_mode1(useraccount, driver, data)\n                text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                           value=f\"{assert_way.split('=', 1)[1]}\").text\n                print('通道0')\n                print(text)\n>               assert text == result\nE               AssertionError\n\n..\\mode\\register.py:155: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_main.Test_Main object at 0x000001D9557DE8E0>\nParameter = {'assert_way': 'class name=text-tit-lg', 'case_no': '29', 'casename': '密码为数字+大写字母+特殊字符注册成功', 'data': 'useraccount=a883774917@163.com\\npassword=123ASD！@#', ...}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b93df9bf9fed55af28b9b9fc5d059e9f\")>\n\n    \n    @allure.feature('注册')\n    @pytest.mark.parametrize('Parameter', case_infos['registe'], ids=casename_infos['registe'])\n    def test_regist(self, Parameter, driver):\n>       allure.dynamic.title(Parameter['casename'])  # 测试用例名称\n\ntest_main.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <okmarts_ui_test.mode.register.Regist object at 0x000001D9557EE790>\nParameter = {'assert_way': 'class name=text-tit-lg', 'case_no': '29', 'casename': '密码为数字+大写字母+特殊字符注册成功', 'data': 'useraccount=a883774917@163.com\\npassword=123ASD！@#', ...}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b93df9bf9fed55af28b9b9fc5d059e9f\")>\n\n    def regist(self, Parameter, driver):\n        casename = Parameter['casename']\n        mode = Parameter['mode']\n        data = Parameter['data'].split('\\n')\n        if casename == '用户名邮箱为空下一步操作置灰':\n            useraccount = data[0].split('=')[-1]\n        elif casename == '输入已存在的用户名注册失败':\n            useraccount = '979172251@qq.com'\n        else:\n            useraccount = Common().random_email_account()\n    \n        assert_way = Parameter['assert_way']\n        result = Parameter['result']\n        driver.get('http://18.118.13.94:81/my/register')\n        time.sleep(0.5)\n        driver.find_element(by='id', value='register_step_1_userAccount').send_keys(useraccount)\n    \n        if casename == '不勾选用户协议注册失败':\n            driver.find_element(by='class name', value='ant-checkbox').click()\n        else:\n            pass\n    \n        driver.find_element(by='xpath',\n                            value='//*[@id=\"app\"]/div/div[1]/div[2]/form/div[3]/div/div/span/div/button/a').click()  # 点击下一步发送验证码\n    \n        if casename == '用户名邮箱为空下一步操作置灰':\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").get_attribute('disabled')\n            print('通道1')\n            print(text)\n            assert text == result\n        elif casename == '关闭验证码页面成功':\n            time.sleep(3)\n            # print(self.dr.find_element(by='class name', value='ant-modal-body').is_displayed())\n            driver.find_element(by='class name', value='anticon.anticon-close.ant-modal-close-icon').click()\n            time.sleep(0.5)\n            assert driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").is_displayed() is not result\n        elif casename == '使用过期验证码验证失败':\n            code = Get_Code().wangyi(username=useraccount, password='Qwe3541118', name='hydraulic', no=2)  # 获取验证码\n            self.input_code(driver, code)\n            time.sleep(2)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道2')\n            print(text)\n            assert text == result\n        elif casename == '输入错误验证码注册失败':\n            self.input_code(driver, ['111111'])\n            time.sleep(2)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道3')\n            print(text)\n            assert text == result\n        elif casename == '超时后再次发送验证码成功':\n            time.sleep(63)\n            driver.find_element(by='xpath', value='/html/body/div[2]/div/div[2]/div/div[2]/div/div/div[2]/a').click()\n            time.sleep(3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道4')\n            print(text)\n            assert text == result\n        elif casename in ['邮箱不含@弹出错误提示', '输入已存在的用户名注册失败', '不勾选用户协议注册失败']:\n            time.sleep(1)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道5')\n            print(text)\n            assert text == result\n        elif casename == '注册完成后领取优惠卷成功':\n            self.regist_mode1(useraccount, driver, data)\n            driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div[1]/div[5]/img').click()  # 点击礼物箱\n            time.sleep(0.2)\n            driver.find_element(by='class name', value='bg-orange.ant-btn').click()  # 点击确定\n            time.sleep(2)\n            text = driver.find_element(by='xpath', value='/html/body/div[2]/span/div/div/div/span').text\n            print(text)\n            Common().login(driver,useraccount,password=data[1].split('=')[-1])\n            WebDriverWait(driver,30,0.2).until(lambda x:x.find_element_by_css_selector('#app > div > div.global-header > div > div.menu-content > div.menu-right.flex > div:nth-child(1) > span'))\n            driver.find_element(by='css selector', value='#app > div > div.global-header > div > div.menu-content > div.menu-right.flex > div:nth-child(1) > span').click()\n            time.sleep(1.5)\n            coupons_text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                               value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道6')\n            print(coupons_text)\n            assert text == 'success' and coupons_text == result\n        elif casename == '领取优惠卷回退页面再次领取失败':\n            self.regist_mode1(useraccount, driver, data)\n            driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div[1]/div[5]/img').click()  # 点击礼物箱\n            time.sleep(0.2)\n            driver.find_element(by='class name', value='bg-orange.ant-btn').click()  # 点击确定\n            time.sleep(2)\n            driver.back()\n            time.sleep(2)\n            driver.find_element(by='class name', value='bg-orange.ant-btn').click()  # 点击确定\n            time.sleep(2)\n            Common().login(driver,useraccount,password=data[1].split('=')[-1])   #登录\n            driver.find_element(by='css selector', value='#app > div > div.global-header > div > div.menu-content > div.menu-right.flex > div:nth-child(1) > span > p').click()\n            time.sleep(1.5)\n            coupons_text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                               value=f\"{assert_way.split('=', 1)[1]}\").text\n            print('通道7')\n            print(coupons_text)\n            assert coupons_text == result\n        elif casename == '不进行验证注册失败':\n            print('通道0')\n            time.sleep(10)      #等待验证码发送至邮箱\n            code = Get_Code().wangyi(username=useraccount, password='Qwe3541118', name='hydraulic', no=1)  # 获取验证码\n            print(code[0])\n            self.input_code(driver, code)\n            time.sleep(2)\n            driver.find_element(by='css selector',value='#app > div > div.login-form-wrap > '\n                                                        'div.login-form.margin-bottom > form > div:nth-child(1) > div'\n                                                        ' > div > span > span > input').send_keys(data[1].split('=')[-1]) # 输入密码\n    \n            time.sleep(0.5)\n            driver.find_element(by=\"css selector\",\n                                value='#app > div > div.login-form-wrap > div.login-form.margin-bottom > form > '\n                                      'div.btn-out.ant-row.ant-form-item > div > div > span > div > a').click()  # 点击下一步\n            WebDriverWait(driver,30,0.2).until(lambda driver:driver.find_element(by='css selector',value='body > div.ant-message > span > div > div > div > span'))\n            time.sleep(2)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print(f'text 为{text}')\n            print(f'result 为{result}')\n            assert text == result\n        else:\n            try:\n                self.regist_mode1(useraccount, driver, data)\n                text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                           value=f\"{assert_way.split('=', 1)[1]}\").text\n                print('通道0')\n                print(text)\n                assert text == result\n            except :\n>               raise AssertionError\nE               AssertionError\n\n..\\mode\\register.py:157: AssertionError"}, "steps": [{"name": "添加失败截图...", "status": "passed", "attachments": [{"name": "失败截图", "source": "258b585e-4457-46d5-9563-c0e3f57a3238-attachment.png", "type": "image/png"}], "start": 1651036947973, "stop": 1651036948108}], "attachments": [{"name": "stdout", "source": "b72c55bf-d680-4208-9f08-53e3aba619ee-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "Parameter", "value": "{'case_no': '29', 'casename': '密码为数字+大写字母+特殊字符注册成功', 'mode': '注册', 'data': 'useraccount=a883774917@163.com\\npassword=123ASD！@#', 'assert_way': 'class name=text-tit-lg', 'result': 'Congratulations, registration is successful'}"}], "start": 1651036908363, "stop": 1651036947953, "uuid": "057ea163-929c-490d-854e-982741804c27", "historyId": "1d057baed39ed7952c8e2889bbb3bd2c", "testCaseId": "91efbca2877ad29cfc72c696a08d59d8", "fullName": "test_main.Test_Main#test_regist", "labels": [{"name": "feature", "value": "注册"}, {"name": "suite", "value": "test_main"}, {"name": "subSuite", "value": "Test_Main"}, {"name": "host", "value": "DESKTOP-NB3FDE0"}, {"name": "thread", "value": "21748-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_main"}]}