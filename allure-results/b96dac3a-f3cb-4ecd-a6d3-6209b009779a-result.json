{"name": "点击order data可以根据订单时间进行排序", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <okmarts_ui_test.mode.my_order.My_Order object at 0x000001AA0FE6BE20>\ndriver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"ef131a9973342768f35630247464e8b6\")>\ninfo = '2393'\n\n    def assert_time_desc(self, driver, info):\n        \"\"\"\n        断言时间排序方法\n        :param driver: 驱动\n        :param info:  获取的定位文本\n        :return:\n        \"\"\"\n        if info == '2035':  # 为日期降序\n            time_1 = driver.find_elements(by='class name', value='item.width-17.date')[0].text\n            print(time_1)\n            number1 = self.get_number(time_1)\n            print(number1)\n            time_2 = driver.find_elements(by='class name', value='item.width-17.date')[1].text\n            print(time_2)\n            number2 = self.get_number(time_2)\n            print(number2)\n            try:\n                assert number1 > number2\n                print('降序测试通过')\n            except AssertionError:\n                print('降序测试失败')\n                raise AssertionError\n        elif info == '2393':  # 日期升序\n            time_1 = driver.find_elements(by='class name', value='item.width-17.date')[0].text\n            print(time_1)\n            number1 = self.get_number(time_1)\n            print(number1)\n            time_2 = driver.find_elements(by='class name', value='item.width-17.date')[1].text\n            print(time_2)\n            number2 = self.get_number(time_2)\n            print(number2)\n            try:\n>               assert number1 < number2\nE               AssertionError\n\n..\\mode\\my_order.py:294: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_main.Test_Main object at 0x000001AA0FE62BE0>\ndriver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"ef131a9973342768f35630247464e8b6\")>\nParameter = {'assert_way': '', 'case_no': '98', 'casename': '点击order data可以根据订单时间进行排序', 'data': '', ...}\n\n    @allure.feature('订单管理')\n    @pytest.mark.parametrize('Parameter', case_infos['my_order'], ids=casename_infos['my_order'])\n    def test_my_order(self, driver, Parameter):\n        allure.dynamic.title(Parameter['casename'])\n>       My_Order().my_order(driver,Parameter)\n\ntest_main.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\mode\\my_order.py:109: in my_order\n    self.assert_time_desc(driver, info3)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <okmarts_ui_test.mode.my_order.My_Order object at 0x000001AA0FE6BE20>\ndriver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"ef131a9973342768f35630247464e8b6\")>\ninfo = '2393'\n\n    def assert_time_desc(self, driver, info):\n        \"\"\"\n        断言时间排序方法\n        :param driver: 驱动\n        :param info:  获取的定位文本\n        :return:\n        \"\"\"\n        if info == '2035':  # 为日期降序\n            time_1 = driver.find_elements(by='class name', value='item.width-17.date')[0].text\n            print(time_1)\n            number1 = self.get_number(time_1)\n            print(number1)\n            time_2 = driver.find_elements(by='class name', value='item.width-17.date')[1].text\n            print(time_2)\n            number2 = self.get_number(time_2)\n            print(number2)\n            try:\n                assert number1 > number2\n                print('降序测试通过')\n            except AssertionError:\n                print('降序测试失败')\n                raise AssertionError\n        elif info == '2393':  # 日期升序\n            time_1 = driver.find_elements(by='class name', value='item.width-17.date')[0].text\n            print(time_1)\n            number1 = self.get_number(time_1)\n            print(number1)\n            time_2 = driver.find_elements(by='class name', value='item.width-17.date')[1].text\n            print(time_2)\n            number2 = self.get_number(time_2)\n            print(number2)\n            try:\n                assert number1 < number2\n                print('升序测试通过')\n            except AssertionError:\n                print('升序测试失败')\n>               raise AssertionError\nE               AssertionError\n\n..\\mode\\my_order.py:298: AssertionError"}, "steps": [{"name": "添加失败截图...", "status": "passed", "attachments": [{"name": "失败截图", "source": "d2805081-5ff5-41f3-8aae-378eaae8d83d-attachment.png", "type": "image/png"}], "start": 1651201840028, "stop": 1651201840172}], "attachments": [{"name": "stdout", "source": "3f970541-f9a6-4844-8235-66f58ba9a0fe-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "Parameter", "value": "{'case_no': '98', 'casename': '点击order data可以根据订单时间进行排序', 'mode': '订单管理', 'data': '', 'assert_way': '', 'result': ''}"}], "start": 1651201832417, "stop": 1651201840005, "uuid": "a925ec31-8316-453b-bb51-ff90b25262fa", "historyId": "1c56705930638359f5ef42176bace7d5", "testCaseId": "7ada25215fe1778912de4f80f444a520", "fullName": "test_main.Test_Main#test_my_order", "labels": [{"name": "feature", "value": "订单管理"}, {"name": "suite", "value": "test_main"}, {"name": "subSuite", "value": "Test_Main"}, {"name": "host", "value": "DESKTOP-NB3FDE0"}, {"name": "thread", "value": "7776-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_main"}]}