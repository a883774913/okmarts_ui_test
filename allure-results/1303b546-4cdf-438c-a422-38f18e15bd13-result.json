{"name": "不进行验证注册失败", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"_mail_component_147_147\"]\"}\n  (Session info: MicrosoftEdge=100.0.1185.50)\nStacktrace:\nBacktrace:\n\tMicrosoft::Applications::Events::EventProperties::unpack [0x00007FF722171922+25346]\n\tMicrosoft::Applications::Events::time_ticks_t::time_ticks_t [0x00007FF7220AE982+515794]\n\tOrdinal0 [0x00007FF721BC0BC5+658373]\n\tOrdinal0 [0x00007FF721BFB992+899474]\n\tOrdinal0 [0x00007FF721BFBC68+900200]\n\tOrdinal0 [0x00007FF721C2D937+1104183]\n\tOrdinal0 [0x00007FF721C16C7F+1010815]\n\tOrdinal0 [0x00007FF721C2B034+1093684]\n\tOrdinal0 [0x00007FF721C16A53+1010259]\n\tOrdinal0 [0x00007FF721BEDB47+842567]\n\tOrdinal0 [0x00007FF721BEF018+847896]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF721D7F1C8+827304]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF721E69389+34681]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF721E6C562+47442]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF721CBC6D6+29878]\n\tMicrosoft::Applications::Events::time_ticks_t::time_ticks_t [0x00007FF7220B5971+544449]\n\tMicrosoft::Applications::Events::time_ticks_t::time_ticks_t [0x00007FF7220BA974+564932]\n\tMicrosoft::Applications::Events::time_ticks_t::time_ticks_t [0x00007FF7220BAACD+565277]\n\tMicrosoft::Applications::Events::time_ticks_t::time_ticks_t [0x00007FF7220C48BE+605710]\n\tBaseThreadInitThunk [0x00007FFB3F2854E0+16]\n\tRtlUserThreadStart [0x00007FFB4090485B+43]", "trace": "self = <test_main.Test_Main object at 0x000001D9558E0250>\nParameter = {'assert_way': 'css selector=body > div.ant-message > span > div > div > div > span', 'case_no': '34', 'casename': '不进行验证注册失败', 'data': 'useraccount=a883774917@163.com\\npassword=a123456', ...}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b93df9bf9fed55af28b9b9fc5d059e9f\")>\n\n    \n    @allure.feature('注册')\n    @pytest.mark.parametrize('Parameter', case_infos['registe'], ids=casename_infos['registe'])\n    def test_regist(self, Parameter, driver):\n>       allure.dynamic.title(Parameter['casename'])  # 测试用例名称\n\ntest_main.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\mode\\register.py:129: in regist\n    code = Get_Code().wangyi(username=useraccount, password='Qwe3541118', name='hydraulic', no=1)  # 获取验证码\n..\\mode\\get_code.py:87: in wangyi\n    self.dr.find_element(By.ID, \"_mail_component_147_147\").click()  # 点击收件箱\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1244: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001D9558CCE20>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...0C48BE+605710]\\\\n\\\\tBaseThreadInitThunk [0x00007FFB3F2854E0+16]\\\\n\\\\tRtlUserThreadStart [0x00007FFB4090485B+43]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"_mail_component_147_147\"]\"}\nE         (Session info: MicrosoftEdge=100.0.1185.50)\nE       Stacktrace:\nE       Backtrace:\nE       \tMicrosoft::Applications::Events::EventProperties::unpack [0x00007FF722171922+25346]\nE       \tMicrosoft::Applications::Events::time_ticks_t::time_ticks_t [0x00007FF7220AE982+515794]\nE       \tOrdinal0 [0x00007FF721BC0BC5+658373]\nE       \tOrdinal0 [0x00007FF721BFB992+899474]\nE       \tOrdinal0 [0x00007FF721BFBC68+900200]\nE       \tOrdinal0 [0x00007FF721C2D937+1104183]\nE       \tOrdinal0 [0x00007FF721C16C7F+1010815]\nE       \tOrdinal0 [0x00007FF721C2B034+1093684]\nE       \tOrdinal0 [0x00007FF721C16A53+1010259]\nE       \tOrdinal0 [0x00007FF721BEDB47+842567]\nE       \tOrdinal0 [0x00007FF721BEF018+847896]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF721D7F1C8+827304]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF721E69389+34681]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF721E6C562+47442]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF721CBC6D6+29878]\nE       \tMicrosoft::Applications::Events::time_ticks_t::time_ticks_t [0x00007FF7220B5971+544449]\nE       \tMicrosoft::Applications::Events::time_ticks_t::time_ticks_t [0x00007FF7220BA974+564932]\nE       \tMicrosoft::Applications::Events::time_ticks_t::time_ticks_t [0x00007FF7220BAACD+565277]\nE       \tMicrosoft::Applications::Events::time_ticks_t::time_ticks_t [0x00007FF7220C48BE+605710]\nE       \tBaseThreadInitThunk [0x00007FFB3F2854E0+16]\nE       \tRtlUserThreadStart [0x00007FFB4090485B+43]\n\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException"}, "steps": [{"name": "添加失败截图...", "status": "passed", "attachments": [{"name": "失败截图", "source": "6232335b-2eee-48e2-9022-0c18ae09901f-attachment.png", "type": "image/png"}], "start": 1651037238114, "stop": 1651037238305}], "attachments": [{"name": "stdout", "source": "a53d8ba2-2d61-4192-95cd-f4e9c9f4b256-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "Parameter", "value": "{'case_no': '34', 'casename': '不进行验证注册失败', 'mode': '注册', 'data': 'useraccount=a883774917@163.com\\npassword=a123456', 'assert_way': 'css selector=body > div.ant-message > span > div > div > div > span', 'result': 'Please press the slider and drag to the far right'}"}], "start": 1651037215013, "stop": 1651037238043, "uuid": "852600fb-3c5b-49e8-80a7-05c118b029c4", "historyId": "14971ccdbbb35a3a2adea61b84f9bef0", "testCaseId": "91efbca2877ad29cfc72c696a08d59d8", "fullName": "test_main.Test_Main#test_regist", "labels": [{"name": "feature", "value": "注册"}, {"name": "suite", "value": "test_main"}, {"name": "subSuite", "value": "Test_Main"}, {"name": "host", "value": "DESKTOP-NB3FDE0"}, {"name": "thread", "value": "21748-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_main"}]}