{"name": "输入已存在的用户名注册失败", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_main.Test_Main object at 0x0000026D045C3700>\nParameter = {'assert_way': 'xpath=/html/body/div[2]/span/div/div/div/span', 'case_no': '9', 'casename': '输入已存在的用户名注册失败', 'data': 'userAccount=979172251@qq.com', ...}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fc0d33ed19130eac63b02f0b8b10c5f7\")>\n\n    @allure.feature('注册')\n    @pytest.mark.parametrize('Parameter',case_infos['registe'],ids=casename_infos['registe'])\n    def test_regist(self,Parameter,driver):\n        allure.dynamic.title(Parameter['casename'])  # 测试用例名称\n>       Regist().regist(Parameter,driver)\n\ntest_main.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <okmarts_ui_test.mode.register.Regist object at 0x0000026D045CDF70>\nParameter = {'assert_way': 'xpath=/html/body/div[2]/span/div/div/div/span', 'case_no': '9', 'casename': '输入已存在的用户名注册失败', 'data': 'userAccount=979172251@qq.com', ...}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fc0d33ed19130eac63b02f0b8b10c5f7\")>\n\n    def regist(self, Parameter, driver):\n        casename = Parameter['casename']\n        mode = Parameter['mode']\n        data = Parameter['data'].split('\\n')\n        if casename == '用户名邮箱为空下一步操作置灰':\n            useraccount = data[0].split('=')[-1]\n        elif casename == '输入已存在的用户名注册失败':\n            useraccount = '979172251@qq.com'\n        else:\n            useraccount = Common().random_email_account()\n    \n        assert_way = Parameter['assert_way']\n        result = Parameter['result']\n        driver.get('http://18.118.13.94:81/my/register')\n        time.sleep(0.5)\n        driver.find_element(by='id', value='register_step_1_userAccount').send_keys(useraccount)\n    \n        if casename == '不勾选用户协议注册失败':\n            driver.find_element(by='class name', value='ant-checkbox').click()\n        else:\n            pass\n    \n        driver.find_element(by='xpath',\n                            value='//*[@id=\"app\"]/div/div[1]/div[2]/form/div[3]/div/div/span/div/button/a').click()  # 点击下一步发送验证码\n    \n        if casename == '用户名邮箱为空下一步操作置灰':\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").get_attribute('disabled')\n            print(text)\n            assert text == result\n        elif casename == '关闭验证码页面成功':\n            time.sleep(3)\n            # print(self.dr.find_element(by='class name', value='ant-modal-body').is_displayed())\n            driver.find_element(by='class name', value='anticon.anticon-close.ant-modal-close-icon').click()\n            time.sleep(0.5)\n            assert driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").is_displayed() is not result\n        elif casename == '使用过期验证码验证失败':\n            code = Get_Code().wangyi(username=useraccount, password='Qwe3541118', name='hydraulic', no=2)  # 获取验证码\n            print(code[0])\n            self.input_code(driver, code)\n            time.sleep(1.3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print(text)\n            assert text == result\n        elif casename == '输入错误验证码注册失败':\n            time.sleep(2)\n            self.input_code(driver, ['111111'])\n            time.sleep(1.3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print(text)\n            assert text == result\n        elif casename == '超时后再次发送验证码成功':\n            time.sleep(63)\n            driver.find_element(by='xpath', value='/html/body/div[2]/div/div[2]/div/div[2]/div/div/div[2]/a').click()\n            time.sleep(3)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print(text)\n            assert text == result\n        elif casename in ['邮箱不含@弹出错误提示', '输入已存在的用户名注册失败', '不勾选用户协议注册失败']:\n            time.sleep(1)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print(text)\n>           assert text == result\nE           AssertionError\n\n..\\mode\\register.py:86: AssertionError"}, "steps": [{"name": "添加失败截图...", "status": "passed", "attachments": [{"name": "失败截图", "source": "8361bcce-8b0e-45e0-8231-5c99b3aae696-attachment.png", "type": "image/png"}], "start": 1650597319079, "stop": 1650597319424}], "attachments": [{"name": "stdout", "source": "0a049f02-fefb-40cf-bedf-c1587ededb6a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "Parameter", "value": "{'case_no': '9', 'casename': '输入已存在的用户名注册失败', 'mode': '注册', 'data': 'userAccount=979172251@qq.com', 'assert_way': 'xpath=/html/body/div[2]/span/div/div/div/span', 'result': 'The mailbox is already registered'}"}], "start": 1650597314433, "stop": 1650597318589, "uuid": "ab2e0f16-04c8-465d-8cd9-37659afba5bd", "historyId": "f44382204f6c23bd5640584e5a08c4dd", "testCaseId": "91efbca2877ad29cfc72c696a08d59d8", "fullName": "test_main.Test_Main#test_regist", "labels": [{"name": "feature", "value": "注册"}, {"name": "suite", "value": "test_main"}, {"name": "subSuite", "value": "Test_Main"}, {"name": "host", "value": "DESKTOP-NB3FDE0"}, {"name": "thread", "value": "6916-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_main"}]}