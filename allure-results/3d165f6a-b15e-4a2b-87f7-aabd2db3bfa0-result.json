{"name": "购物车内包含商品时，购物车图标显示正确", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_main.Test_Main object at 0x000001D1EBCDB8B0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d1ada906210b70896bceae01dc4cd77a\")>\nParameter = {'assert_way': '', 'case_no': '', 'casename': '购物车内包含商品时，购物车图标显示正确', 'data': '', ...}\n\n    @allure.feature('购物车')\n    @pytest.mark.parametrize('Parameter', case_infos['shop_car'], ids=casename_infos['shop_car'])\n    def test_shop_car(self,driver,Parameter):\n        allure.dynamic.title(Parameter['casename'])\n>       Shop_Car().shop_car(driver,Parameter)\n\ntest_main.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <okmarts_ui_test.mode.shop_car.Shop_Car object at 0x000001D1EBB6FC10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d1ada906210b70896bceae01dc4cd77a\")>\nParameter = {'assert_way': '', 'case_no': '', 'casename': '购物车内包含商品时，购物车图标显示正确', 'data': '', ...}\n\n    def shop_car(self, driver, Parameter):\n        casename = Parameter['casename']\n        data = Parameter['data']\n        print(data)\n        assert_way = Parameter['assert_way']\n        result = Parameter['result']\n    \n        driver.get('http://18.118.13.94:81/index')  # 打开首页\n        WebDriverWait(driver, 20, 0.2).until(lambda x: x.find_element(by='xpath', value='//*[@id=\"app\"]/div/div[1]/div/div[2]/div[3]/div[3]/span[1]'))\n        time.sleep(1)\n        if casename == '未登录状态下点击购物车页面跳转到登录页面成功':\n            Common().Restore_environment(driver)\n            time.sleep(1)\n            driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div[1]/div/div[2]/div[3]/div[3]/span[1]').click()\n            time.sleep(2)\n            text = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                       value=f\"{assert_way.split('=', 1)[1]}\").text\n            print(text)\n            assert text == result\n        else:\n            Common().is_login(driver, useraccount='979172251@qq.com', password='a123456')\n            time.sleep(2)\n            if casename == '首页显示购物车图标，点击购物车，页面跳转到购物车页面':\n                info = driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div[1]/div/div[2]/div[3]/div[3]/span[1]').text  # 检查是否存在购物车按钮\n                print(info)\n                goods_number = driver.find_element(by='class name', value='num').text       #获取购物车小图标显示数量\n                print(goods_number)\n                assert info == 'Cart'\n                driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div[1]/div/div[2]/div[3]/div[3]/span[1]').click()     #点击购物车\n                time.sleep(2)\n                if goods_number == '0':\n                    text = driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div/div[2]/div[1]/a').text\n                    print('不存在商品')\n                    print(text)\n                    assert text == 'The shopping cart is still empty for the time being, go pick a few items right away'\n                else:\n                    print('存在商品')\n                    text = driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div/div[2]/div[1]/div[1]/div[1]/div[1]/span').text\n                    assert text == 'Shopping cart'\n            elif casename == '购物车内无商品时点击相关文字跳转到首页成功':\n                goods_number = driver.find_element(by='class name', value='num').text  # 判断购物车是否有商品\n                if goods_number != '0':  # 如果商品数量不为0，删除该账户购物车商品数据\n                    print('存在商品，删除中')\n                    Mysql().drop_table(user=\"root\", pwd=\"OKmarts888.,\", host=\"18.118.13.94\", db=\"okmarts\", port=3306,\n                                       sql=\"DELETE FROM shopping_cart WHERE userid='1506910015154425856';\")\n                    time.sleep(1)\n                else:\n                    pass\n                driver.find_element(by='class name', value='num').click()\n                time.sleep(2)\n                text = driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div/div[2]/div[1]/a').text\n                print(text)\n                assert text == 'The shopping cart is still empty for the time being, go pick a few items right away'\n                driver.find_element(by='xpath', value='//*[@id=\"app\"]/div/div/div[2]/div[1]/a').click()\n                time.sleep(2)\n                text1 = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                            value=f\"{assert_way.split('=', 1)[1]}\").text\n                assert text1 == result\n            elif casename == '当商品添加数量为1时无法点击-号':\n                Mysql().drop_table(user=\"root\", pwd=\"OKmarts888.,\", host=\"18.118.13.94\", db=\"okmarts\", port=3306,\n                                   sql=\"DELETE FROM shopping_cart WHERE userid='1506910015154425856';\")\n                time.sleep(1)\n                self.add_goods_to_shopcar(driver)  # 加入商品至购物车\n                try:\n                    info = driver.find_element(by=f\"{assert_way.split('=', 1)[0]}\",\n                                               value=f\"{assert_way.split('=', 1)[1]}\").get_attribute(\"disabled\")\n                    print(info)\n                    assert info == result\n                except:\n                    assert False\n            elif casename == '购物车内包含商品时，购物车图标显示正确':\n                goods_number = driver.find_element(by='class name', value='num').text  # 判断购物车是否有商品\n                print(goods_number)\n                if goods_number == '0':  # 如果商品数量为0\n                    self.add_goods_to_shopcar(driver)\n                    goods_number2 = driver.find_element(by='class name', value='num').text  # 判断购物车商品数量有无增加\n                    print(goods_number2)\n>                   assert int(goods_number2) == int(goods_number) + 1\nE                   AssertionError\n\n..\\mode\\shop_car.py:93: AssertionError"}, "steps": [{"name": "添加失败截图...", "status": "passed", "attachments": [{"name": "失败截图", "source": "7ff30699-be54-4f35-95f7-06bf50006af6-attachment.png", "type": "image/png"}], "start": 1652158115555, "stop": 1652158115675}], "attachments": [{"name": "stdout", "source": "41a792ba-5cfb-4895-9b92-163f4adba41c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "Parameter", "value": "{'case_no': '', 'casename': '购物车内包含商品时，购物车图标显示正确', 'mode': '购物车', 'data': '', 'assert_way': '', 'result': ''}"}], "start": 1652158105533, "stop": 1652158115538, "uuid": "fce3e381-9c98-4270-bdaf-bedb4108198e", "historyId": "71898bcdeeb21cb287d2a893e6760fbb", "testCaseId": "001d4057b59b173ed0477a06c6b1ae9c", "fullName": "test_main.Test_Main#test_shop_car", "labels": [{"name": "feature", "value": "购物车"}, {"name": "suite", "value": "test_main"}, {"name": "subSuite", "value": "Test_Main"}, {"name": "host", "value": "DESKTOP-NB3FDE0"}, {"name": "thread", "value": "24552-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_main"}]}